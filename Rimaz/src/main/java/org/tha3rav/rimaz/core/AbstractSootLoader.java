package org.tha3rav.rimaz.core;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

public abstract class AbstractSootLoader
{
    //region Fields

    /**
     * Path into the folder containing set of android.jar files of all the different platform versions
     * necessary for the SOOT framework.
     */
    protected String androidJarsPath;

    /**
     * Optional field representing the path of the folder that contains the output data generated
     * by SOOT framework
     */
    protected Optional<String> outputDirectoryPath;

    /**
     * List of strings representing full names of packages to be ignored by the SOOT framework when
     * retrieving classes from the APK file.
     */
    protected List<String> excludedPackages;

    /**
     * Value representing the IR (Intermediate Representation) to be used as an output format for
     * the SOOT framework.
     */
    protected int outputFormat;

    /**
     * Object telling whether the current SootLoader object is initialized or not yet for Apk loading
     */
    protected boolean isSootLoaderInitialized;
    //endregion

    //region Constructors
    /**
     * Create an object that loads SOOT with the following parameters
     *
     * @param androidJarsPath : Object representing a path String to the folder containing all the
     *                        android.jar files of all the different platform versions necessary for
     *                        the SOOT framework.
     * @param outputFormat : Object representing the IR (Intermediate Representation) to be used as
     *                     an output format for the SOOT framework.
     */
    public AbstractSootLoader(String androidJarsPath, int outputFormat)
    {
        this.androidJarsPath =  androidJarsPath;
        this.outputFormat = outputFormat;
        this.outputDirectoryPath = Optional.empty();
    }

    /**
     * Create an object that loads SOOT with the following parameters
     *
     * @param androidJarsPath : Object representing a path String to the folder containing all the
     *                        android.jar files of all the different platform versions necessary for
     *                        the SOOT framework.
     * @param outputFormat : Object representing the IR (Intermediate Representation) to be used as
     *                     an output format for the SOOT framework.
     * @param excludedPackages : Object representing List of packages and respective classes to exclude from APK
     */
    public AbstractSootLoader(String androidJarsPath, int outputFormat, List<String> excludedPackages)
    {
        this(androidJarsPath, outputFormat);
        this.excludedPackages = excludedPackages;
    }

    /**
     * Create an object that loads SOOT with the following parameters
     *
     * @param androidJarsPath : Object representing a path String to the folder containing all the
     *                        android.jar files of all the different platform versions necessary for
     *                        the SOOT framework.
     * @param outputFormat : Object representing the IR (Intermediate Representation) to be used as
     *                     an output format for the SOOT framework.
     * @param excludedPackages : Objects representing packages and respective classes to exclude from APK
     */
    public AbstractSootLoader(String androidJarsPath, int outputFormat, String... excludedPackages)
    {
        this(androidJarsPath, outputFormat);
        this.excludedPackages = Arrays.stream(excludedPackages).collect(Collectors.toList());
    }

    /**
     * Create an object that loads SOOT with the following parameters
     *
     * @param androidJarsPath : Object representing a path String to the folder containing all the
     *                        android.jar files of all the different platform versions necessary for
     *                        the SOOT framework.
     * @param outputDirectoryPath : Object representing the path of the folder that contains the output
     *                            data generated by SOOT framework
     * @param outputFormat : Object representing the IR (Intermediate Representation) to be used as
     *                     an output format for the SOOT framework.
     */
    public AbstractSootLoader(String androidJarsPath, String outputDirectoryPath, int outputFormat)
    {
        this.androidJarsPath =  androidJarsPath;
        this.outputDirectoryPath = Optional.of(outputDirectoryPath);
        this.outputFormat = outputFormat;
    }

    /**
     * Create an object that loads SOOT with the following parameters
     *
     * @param androidJarsPath : Object representing a path String to the folder containing all the
     *                        android.jar files of all the different platform versions necessary for
     *                        the SOOT framework.
     * @param outputDirectoryPath : Object representing the path of the folder that contains the output
     *                            data generated by SOOT framework
     * @param outputFormat : Object representing the IR (Intermediate Representation) to be used as
     *                     an output format for the SOOT framework.
     * @param excludedPackages : Object representing List of packages and respective classes to exclude from APK
     */
    public AbstractSootLoader(String androidJarsPath,
                              String outputDirectoryPath,
                              int outputFormat,
                              List<String> excludedPackages)
    {
        this(androidJarsPath, outputDirectoryPath, outputFormat);
        this.excludedPackages = excludedPackages;
    }

    /**
     * Create an object that loads SOOT with the following parameters
     *
     * @param androidJarsPath : Object representing a path String to the folder containing all the
     *                        android.jar files of all the different platform versions necessary for
     *                        the SOOT framework.
     * @param outputDirectoryPath : Object representing the path of the folder that contains the output
     *                            data generated by SOOT framework
     * @param outputFormat : Object representing the IR (Intermediate Representation) to be used as
     *                     an output format for the SOOT framework.
     * @param excludedPackages : Objects representing packages and respective classes to exclude from APK
     */
    public AbstractSootLoader(String androidJarsPath,
                              String outputDirectoryPath,
                              int outputFormat,
                              String... excludedPackages)
    {
        this(androidJarsPath, outputDirectoryPath, outputFormat);
        this.excludedPackages = Arrays.stream(excludedPackages).collect(Collectors.toList());
    }
    //endregion


    //region Methods

    /**
     * Initializes the SOOT framework.
     *
     * @param allowPhantomRefs : Object making SOOT bypassing the references to classes it can't find.
     * @param isWholeProgram : Object that sets SOOT's whole-program mode parameter.
     * @param isApp : Object that sets SOOT's Application mode parameter.
     * @param noBodiesForExcludedClasses : Object that excludes returning the bodies of the methods
     *                                   belonging to excluded classes.
     */
    public abstract AbstractSootLoader initialize(boolean allowPhantomRefs,
                                                  boolean isWholeProgram,
                                                  boolean isApp,
                                                  boolean noBodiesForExcludedClasses);

    //endregion

    //region Properties

    /**
     * @return path into the folder containing set of android.jar files of all the different platform
     * versions necessary for the SOOT framework.
     */
    public String getAndroidJarsPath()
    {
        return androidJarsPath;
    }

    /**
     * @return Optional field representing the path of the folder that contains the output data generated
     * bu SOOT framework
     */
    public Optional<String> getOutputDirectoryPath()
    {
        return outputDirectoryPath;
    }

    /**
     * @return list of strings representing full names of packages to be ignored by the SOOT
     * framework when retrieving classes from the APK file.
     */
    public List<String> getExcludedPackages()
    {
        return excludedPackages;
    }

    /**
     * @return the IR (Intermediate Representation) to be used as an output format for
     * the SOOT framework.
     */
    public int getOutputFormat()
    {
        return outputFormat;
    }

    /**
     * Sets the IR (Intermediate Representation) to be used as an output format for
     * the SOOT framework.
     *
     * @param outputFormat : IR (Intermediate Representation) to be used as an output format.
     */
    public void setOutputFormat(int outputFormat)
    {
        this.outputFormat = outputFormat;
    }

    /**
     * @return returns value telling whether the current SootLoader object is initialized or not yet
     * for Apk loading
     */
    public boolean IsSootLoaderInitialized()
    {
        return isSootLoaderInitialized;
    }

    protected void setIsSootLoaderInitialized(boolean sootLoaderInitialized)
    {
        isSootLoaderInitialized = sootLoaderInitialized;
    }
    //endregion
}
